{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { query, getDocs, collection } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"angular-ng-autocomplete\";\nfunction AppComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"a\", 3);\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", item_r2.name, i0.ɵɵsanitizeHtml);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(firestore) {\n      this.firestore = firestore;\n      this.title = 'dinodex';\n      this.loading = true;\n      this.keyword = 'name';\n      this.dinos = [];\n      this.pullAllDinos();\n    }\n    pullAllDinos() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = true;\n        this.dinos = localStorage.getItem('dinos') ? JSON.parse(localStorage.getItem('dinos')) : yield this.fetchDinosFromFirestore();\n        console.log(this.dinos);\n        this.loading = false;\n      });\n    }\n    fetchDinosFromFirestore() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let dinos = [];\n        const queryPromises = [];\n        // Fetch dinos from Firestore for every letter in the alphabet\n        for (let i = 65; i <= 90; i++) {\n          const letter = String.fromCharCode(i);\n          const queryPromise = getDocs(query(collection(this.firestore, letter.toLowerCase())));\n          queryPromises.push(queryPromise);\n        }\n        // Wait for all the queries to complete\n        const querySnapshots = yield Promise.all(queryPromises);\n        // Extract the data from each query snapshot and concatenate them\n        for (const snapshot of querySnapshots) {\n          const results = snapshot.docs.map(listing => listing.data());\n          dinos = dinos.concat(results);\n        }\n        // Store dinos in local storage\n        localStorage.setItem('dinos', JSON.stringify(dinos));\n        return dinos;\n      });\n    }\n    selectDino(dino) {\n      console.log(dino);\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Firestore));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"ng-autocomplete\"], [\"placeholder\", \"Search for species...\", 3, \"data\", \"searchKeyword\", \"itemTemplate\", \"selected\"], [\"itemTemplate\", \"\"], [3, \"innerHTML\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ng-autocomplete\", 1);\n        i0.ɵɵlistener(\"selected\", function AppComponent_Template_ng_autocomplete_selected_1_listener($event) {\n          return ctx.selectDino($event.name);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, AppComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.dinos)(\"searchKeyword\", ctx.keyword)(\"itemTemplate\", _r0);\n      }\n    },\n    dependencies: [i2.AutocompleteComponent],\n    styles: [\".loader[_ngcontent-%COMP%]{width:200px;object-fit:contain;margin:200px auto auto;display:block}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}